---
prev:
  text: "Play a Game"
  link: "/guides/tutorials/build-a-game/ao-effect"
next:
  text: "Interpreting Announcements"
  link: "/guides/tutorials/build-a-game/game-state"
---

# Interpreting Announcements

Welcome back to your coding journey. Now, let's leverage skills acquired in previous tutorials to enhance your game experience.

You've probably noticed announcements popping up in your terminal during the game. The arena has been designed to send announcements to players when certain actions take place within a game. But these messages might have seemed cryptic, or you might have found yourself checking your inbox for more details.

What if there was a way to access these details directly from your terminal? Good news: there is!

By using [handlers](/src/references/handlers.md), you can create a bot or an automation to fetch this information for you.

## Setting up the Development Environment

Start by creating a new file named `bot.lua` in your preferred directory.

> Ideally, you should place this file in the same directory where your player process runs to simplify code loading. Otherwise, you'll need to navigate using relative paths.

## Writing the Code

Now, let's define your logic.

All handlers in aos require three arguments: 
- `name`: A unique name for the handler
- `pattern`: A pattern for the handler to identify, triggering its operation
- `handle`: The operations to perform when the desired pattern is found.

Here's how you can write a handler for printing announcement details:

```lua
-- Handler to print game announcements.
Handlers.add(
  "PrintAnnouncements",
  Handlers.utils.hasMatchingTag("Action", "Announcement"),
  function (msg)
    print(msg.Event .. ": " .. msg.Data)
  end
)
```

In this case, the name of the handler is `"PrintAnnouncements"`. The handler uses a special utility (`hasMatchingTags`) to check if the incoming message has been tagged as an announcement. If true, the handler prints the Event and Data, which represent the title and description of the announcement.

> Note: Once a message is "handled", it will be discarded from your `Inbox`.

## Loading and Testing

The last step is actually testing this in-game.

Head over to your aos player terminal and join a game.

Then within your aos terminal load the file with the handler you just created as follows:

```lua
.load bot.lua
```

With this, you should start seeing announcement details right from your terminal.

Congratulations! You just started building a bot on aos. But let's keep working on adding more features to it 🌐


